# These settings and configurations are consistent across different environments.
# Inconsistent and secret settings and configurations should be placed in the .env files,
# using the .env.example files.

# OpenAPI information.
[openapi]
title = "Rental House Management API"
version = "1.0.0"
description = """
The Rental House Management API provides endpoints for users and authentication, comprehensive
property and booking management, payment integrations, property searching, notifications, reviews,
and ratings.
"""

[openapi.contact]
name = "Rental House API Support Team"
email = "alihezarpisheh@outlook.com"

[openapi.license]
name = "MIT License"
url = "https://opensource.org/licenses/MIT"

[[openapi.tags]]
name = "Users"
description = "Operations related to user management, including registration, authentication, and profile management."

[[openapi.tags]]
name = "Properties"
description = "Operations related to property management, including adding, updating, and deleting rental properties."

[[openapi.tags]]
name = "Bookings"
description = "Operations related to booking management, including creating, updating, and canceling bookings."

[[openapi.tags]]
name = "Payments"
description = "Operations related to payment processing, including integration with payment gateways and handling transactions."

[[openapi.tags]]
name = "Search"
description = "Operations related to searching for properties based on various criteria such as location, price, and availability."

[[openapi.tags]]
name = "Notifications"
description = "Operations related to managing notifications, including sending alerts to users about booking status and promotions."

[[openapi.tags]]
name = "Reviews"
description = "Operations related to managing reviews and ratings for properties, including adding, updating, and deleting reviews."

[[openapi.tags]]
name = "Health Check"
description = "A simple endpoint to check if the API is up and running."

# Logging configuration.
[logging]
version = 1
disable_existing_loggers = false

[logging.formatters.coreFormatter]
format = "%(asctime)s - %(levelname)s - %(name)s - %(relativepath)s:%(lineno)d - %(message)s"
datefmt = "%Y-%m-%d %H:%M:%S"

[logging.handlers.consoleHandler]
level = "DEBUG"
class = "logging.StreamHandler"
formatter = "coreFormatter"

[logging.handlers.fileHandler]
level = "INFO"
class = "logging.handlers.RotatingFileHandler"
filename = "logs/rental-house.log"
maxBytes = 1048576   # 1 MB
backupCount = 10
formatter = "coreFormatter"

[logging.loggers.development]
level = "DEBUG"
handlers = ["consoleHandler", "fileHandler"]
propagate = true

[logging.loggers.production]
level = "INFO"
handlers = ["fileHandler"]
propagate = true

[logging.loggers.uvicorn]
level = "DEBUG"
handlers = ["consoleHandler", "fileHandler"]
propagate = true

[logging.loggers.uvicorn.error]
level = "DEBUG"
handlers = ["consoleHandler", "fileHandler"]
propagate = true

[logging.loggers.uvicorn.access]
level = "DEBUG"
handlers = ["consoleHandler", "fileHandler"]
propagate = true
